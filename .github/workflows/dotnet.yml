name: Create Release

on:
  push:
    tags:
      - '*'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.0

    - name: Setup .NET
      uses: actions/setup-dotnet@v3.2.0
      with:
        dotnet-version: 6.0.x

    - name: Set VERSION variable from tag
      run: |
        VERSION=$(echo "${GITHUB_REF}" | sed 's/.*v\([^\s]*\).*/\1/')
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Download References
      run: |
        echo "[Download References] Downloading steam"
        mkdir -p RDS/steamcmd
        cd RDS/steamcmd
        wget -qO- "https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz" | tar zxvf -
        cd ..
        echo "@ShutdownOnFailedCommand 1" > steamcmd/steamcmd.txt
        echo "@NoPromptForPassword 1" >> steamcmd/steamcmd.txt
        echo "force_install_dir ${PWD}" >> steamcmd/steamcmd.txt
        echo "login anonymous" >> steamcmd/steamcmd.txt
        echo "app_update 258550 validate" >> steamcmd/steamcmd.txt
        echo "quit" >> steamcmd/steamcmd.txt
        echo "[Download References] Downloading Rust"
        steamcmd/steamcmd.sh +runscript steamcmd.txt
        cd ..
        mkdir -p src/References
        echo "[Download References] Moving Rust dlls"
        mv -f RDS/RustDedicated_Data/Managed/*.dll src/References/
        mkdir -p Carbon
        cd Carbon
        echo "[Download References] Downloading Carbon"
        wget -qO- https://github.com/CarbonCommunity/Carbon/releases/download/production_build/Carbon.Linux.Release.tar.gz | tar zxvf -
        cd ..
        echo "[Download References] Moving Carbon dlls"
        mv -f Carbon/carbon/managed/*.dll src/References/
        mkdir -p Oxide
        cd Oxide
        echo "[Download References] Downloading Oxide"
        wget -q https://github.com/OxideMod/Oxide.Rust/releases/latest/download/Oxide.Rust-Linux.zip
        unzip -qq -o Oxide.Rust-Linux.zip
        cd ..
        echo "[Download References] Moving Oxide dlls"
        mv -f Oxide/RustDedicated_Data/Managed/*.dll src/References/

    - name: Build DLLs - Oxide
      run: dotnet build Rust.UIFramework.csproj -c Release /p:Platform=Oxide /p:Version=$VERSION
      working-directory: src/Rust.UIFramework/Rust.UIFramework

    - name: Build DLLs - Carbon
      run: dotnet build Rust.UIFramework.csproj -c Release /p:Platform=Carbon /p:Version=$VERSION
      working-directory: src/Rust.UIFramework/Rust.UIFramework

    - name: Move DLLs
      run: |
        mv bin/Oxide/Release/net48/Oxide.Ext.UiFramework.dll bin/
        mv bin/Carbon/Release/net48/Carbon.Ext.UiFramework.dll bin/
        rm -rf bin/Oxide
        rm -rf bin/Carbon
      working-directory: src/Rust.UIFramework/Rust.UIFramework

    - name: Upload Release Assets
      run: |
        TAG=$(echo "${GITHUB_REF}" | sed 's/refs\/tags\///')
        gh release upload $TAG src/Rust.UIFramework/Rust.UIFramework/bin/*.dll
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
